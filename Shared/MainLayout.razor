@inherits LayoutComponentBase
@inject ParserService parserService

<PageTitle>StenParser</PageTitle>

<div class="page">
    <main>
        <input type="button" class="btn btn-warning" style="position:fixed;bottom:0;left:0" value="🐛" @onclick="ToggleDebug" />

        <div class="container @CollapseDebugClass">
            <div class="row">
                <h3>Emulate serial inputs</h3>
                <div class="col">
                    @for (int j = 0; j < inputs.Count; j++)
                    {
                        int i = j; // capture local
                        <div class="container">
                            <form role="form">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="input-group input-group-sm">
                                            <input type="text" class="form-control" @bind="inputs[i]" />
                                            <div class="input-group-btn">
                                                <button type="button" class="btn btn-primary" @onclick="() => parserService.ParseLine(inputs[i])">Send</button>
                                            </div><!-- /btn-group -->
                                        </div><!-- /input-group -->
                                    </div><!-- /.col-xs-12 -->
                                </div><!-- /.row -->
                            </form>
                        </div>
                    }
                </div>
                <div class="col">
                    <textarea rows="@recentLines" cols="30" style="overflow: scroll;">@recent</textarea>
                </div>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
public string CollapseDebugClass => collapseDebug ? "collapse" : "";

private int recentLines = 20;
private static bool collapseDebug = true;
private string recent = string.Empty;
private static readonly List<string> inputs = new()
{
    "0507 F171 F104 0000 0000",
    "0507 F333 F900 0000 0000",
    "0507 F333 4090 0000 0000",
};

protected override void OnInitialized()
{
    recent = string.Join("\n", parserService.RecentInputs.Take(recentLines));
    parserService.OnParserUpdated += () => InvokeAsync(() =>
    {
        recent = string.Join("\n", parserService.RecentInputs.Take(recentLines));
        StateHasChanged();
    });
}

private void ToggleDebug()
{
    collapseDebug = !collapseDebug;
}

}