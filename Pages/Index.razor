@page "/"

@inject ParserService parserService

<PageTitle>Index</PageTitle>

<div class="container" style="direction: rtl">
    <div class="row">
        @foreach((string group, List<int> numbers) in parserService.Options.CallGroups)
        {
            <div class="col" style="border: 1px #ccc solid; margin: 4px; padding: 0">
                <div style="display: block; padding: 8px 8px; background-color: #eee;">@group</div>
                <div style="display: block; padding: 0px 8px;">
                    @foreach(int number in numbers)
                    {
                        <div style="display: block; white-space: pre; color: @(parserService.Answered.ContainsKey(number) ? "green" : "gray")"><span style="font-family: monospace">@number.ToString().PadRight(4)</span> @parserService.GetNumberAlias(number)</div>
                    }
                </div>
            </div>
        }
    </div>
    <div class="row">
        @AnswerCount()
    </div>
</div>

@code {

private void OnParserUpdated()
{
    InvokeAsync(() => StateHasChanged());
}

protected override void OnInitialized()
{
    parserService.OnParserUpdated += OnParserUpdated;
}

public void Dispose()
{
    parserService.OnParserUpdated -= OnParserUpdated;
}

private string AnswerCount()
{
    int total = parserService.Options.CallGroups.SelectMany(cg => cg.Value).Distinct().Count();
    int answered = parserService.Answered.Count;

    return $"Answered {answered} / {total} || {answered * 100.0f / total:f0}%";
}

}
